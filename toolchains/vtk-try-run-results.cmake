# This file was generated by CMake because it detected TRY_RUN() commands
# in crosscompiling mode. It will be overwritten by the next CMake run.
# Copy it to a safe location, set the variables to appropriate values
# and use it then to preset the CMake cache (using -C).


# CMAKE_REQUIRE_LARGE_FILE_SUPPORT
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set CMAKE_REQUIRE_LARGE_FILE_SUPPORT to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# CMAKE_REQUIRE_LARGE_FILE_SUPPORT__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set CMAKE_REQUIRE_LARGE_FILE_SUPPORT__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The HAVE_CMAKE_REQUIRE_LARGE_FILE_SUPPORT variable holds the build result for this TRY_RUN().
# 
# Source file   : /source/vtk/build-vtkmodular-ios/CMakeFiles/CMakeTmp/src.cxx
# Executable    : /source/vtk/build-vtkmodular-ios/CMakeFiles/cmTryCompileExec-CMAKE_REQUIRE_LARGE_FILE_SUPPORT
# Run arguments : 
#    Called from: [1]	/source/vtk/vtkmodular/CMakeLists.txt

SET( CMAKE_REQUIRE_LARGE_FILE_SUPPORT 
     2
     CACHE STRING "Result from TRY_RUN" FORCE)

SET( CMAKE_REQUIRE_LARGE_FILE_SUPPORT__TRYRUN_OUTPUT 
     ""
     CACHE STRING "Output from TRY_RUN" FORCE)


# VTK_TYPE_CHAR_IS_SIGNED
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set VTK_TYPE_CHAR_IS_SIGNED to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# The VTK_TYPE_CHAR_IS_SIGNED_COMPILED variable holds the build result for this TRY_RUN().
# 
# Source file   : /source/vtk/vtkmodular/CMake/vtkTestCharSignedness.cxx
# Executable    : /source/vtk/build-vtkmodular-ios/CMakeFiles/cmTryCompileExec-VTK_TYPE_CHAR_IS_SIGNED
# Run arguments : 
#    Called from: [2]	/source/vtk/vtkmodular/CMake/vtkTestTypes.cmake
#                 [1]	/source/vtk/vtkmodular/CMakeLists.txt

SET( VTK_TYPE_CHAR_IS_SIGNED 
     1
     CACHE STRING "Result from TRY_RUN" FORCE)


# VTK_ANSI_STREAM_EOF_RESULT
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set VTK_ANSI_STREAM_EOF_RESULT to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# The VTK_ANSI_STREAM_EOF_COMPILED variable holds the build result for this TRY_RUN().
# 
# Source file   : /source/vtk/build-vtkmodular-ios/CMake/vtkTestStreamEOF.cxx
# Executable    : /source/vtk/build-vtkmodular-ios/CMakeFiles/cmTryCompileExec-VTK_ANSI_STREAM_EOF_RESULT
# Run arguments : 
#    Called from: [2]	/source/vtk/vtkmodular/CMake/vtkTestStreamsLibrary.cmake
#                 [1]	/source/vtk/vtkmodular/CMakeLists.txt

SET( VTK_ANSI_STREAM_EOF_RESULT 
     0
     CACHE STRING "Result from TRY_RUN" FORCE)


# KWSYS_LFS_WORKS
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set KWSYS_LFS_WORKS to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# KWSYS_LFS_WORKS__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set KWSYS_LFS_WORKS__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The KWSYS_LFS_WORKS_COMPILED variable holds the build result for this TRY_RUN().
# 
# Source file   : /source/vtk/vtkmodular/Utilities/kwsys/kwsysPlatformTestsCXX.cxx
# Executable    : /source/vtk/build-vtkmodular-ios/CMakeFiles/cmTryCompileExec-KWSYS_LFS_WORKS
# Run arguments : 
#    Called from: [1]	/source/vtk/vtkmodular/Utilities/kwsys/CMakeLists.txt

SET( KWSYS_LFS_WORKS 
     2
     CACHE STRING "Result from TRY_RUN" FORCE)

SET( KWSYS_LFS_WORKS__TRYRUN_OUTPUT 
     ""
     CACHE STRING "Output from TRY_RUN" FORCE)


# KWSYS_CHAR_IS_SIGNED
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set KWSYS_CHAR_IS_SIGNED to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# KWSYS_CHAR_IS_SIGNED__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set KWSYS_CHAR_IS_SIGNED__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The KWSYS_CHAR_IS_SIGNED_COMPILED variable holds the build result for this TRY_RUN().
# 
# Source file   : /source/vtk/vtkmodular/Utilities/kwsys/kwsysPlatformTestsCXX.cxx
# Executable    : /source/vtk/build-vtkmodular-ios/CMakeFiles/cmTryCompileExec-KWSYS_CHAR_IS_SIGNED
# Run arguments : 
#    Called from: [1]	/source/vtk/vtkmodular/Utilities/kwsys/CMakeLists.txt

SET( KWSYS_CHAR_IS_SIGNED 
     0
     CACHE STRING "Result from TRY_RUN" FORCE)

SET( KWSYS_CHAR_IS_SIGNED__TRYRUN_OUTPUT 
     ""
     CACHE STRING "Output from TRY_RUN" FORCE)

